# -*- coding: utf-8 -*-
"""
Created on Wed Aug  7 20:55:18 2024

@author: asus
"""
# Даны три натуральных числа. Возможно ли построить треугольник с такими сторонами? Если это возможно, выведите строку YES, иначе выведите строку NO.
# Треугольник — это три точки, не лежащие на одной прямой.
# x = int(input())
# y = int(input())
# z= int(input())
# if x+y>z and x+z>y and y+z>x:
#     print("YES")
# else:
#     print("NO")



# Дан список. Определите, является ли он монотонно возрастающим (то есть верно ли, что каждый элемент этого списка больше предыдущего).
# Выведите YES, если массив монотонно возрастает и NO в противном случае.
# def numbers(lst):
#     for i in range(1, len(lst)):
#         if lst[i] >= lst[i-1]:
#             return "YES"
#     return "NO"

# lst = list(map(int, input().split()))



# print(numbers(lst))
# В новой программе OpenCalculator появилась новая возможность – можно настроить, какие кнопки отображаются, а какие – нет. 
# Если кнопка не отображается на экране, то ввести соответствующую цифру с клавиатуры или копированием из другой программы нельзя. 
# Петя настроил калькулятор так, что он отображает только кнопки с цифрами x, y, z. Напишите программу, определяющую, 
# сможет ли Петя ввести число N, а если нет, то какое минимальное количество кнопок надо дополнительно отобразить на экране для его ввода.
# Формат ввода
# Сначала вводятся три различных числа из диапазона от 0 до 9: x, y и z (числа разделяются пробелами). Далее вводится целое неотрицательное число N,
# которое Петя хочет ввести в калькулятор. Число N не превышает 10000.
# Формат вывода
# Выведите, какое минимальное количество кнопок должно быть добавлено для того, чтобы можно было ввести число N (если число может быть введено с 
# помощью уже имеющихся кнопок, выведите 0)
# Примечание
# Комментарии к примерам тестов.
# Число может быть введено имеющимися кнопками.
# Нужно добавить кнопку 0.
# Нужно добавить кнопки 1 и 2.
def min_additional_buttons(x, y, z, N):
    available_digits = {str(x), str(y), str(z)}
    
    needed_digits = set(str(N))
    
    
    missing_digits = needed_digits - available_digits
    
    
    return len(missing_digits)


x, y, z = map(int, input().split())
N = int(input())


print(min_additional_buttons(x, y, z, N))

